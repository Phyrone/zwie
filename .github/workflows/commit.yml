name: Commit

on:
  push:
#  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-client:
    defaults:
      run:
        working-directory: ./client
    strategy:
      fail-fast: false
      matrix:
        platform: [ macos-latest, ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.4.1
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '11'
      - name: Rust setup
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@859c33240bd026ce8d5f711f5adcc65c2f8eafc1
      - name: Add aarch64-apple-darwin
        if: matrix.platform == 'macos-latest'
        run: rustup target add aarch64-apple-darwin
      - name: Install dependencies (ubuntu)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
      #    - name: Install dependencies (macos)
      #      if: matrix.platform == 'macos-latest'
      #      run: |
      #         brew install dbus
      - name: Buildcache (cargo and node)
        uses: actions/cache@v3
        with:
          path: |
            client/src-tauri/target
            !client/src-tauri/target/*/bundle/**
            client/node_modules
          key: ${{ runner.os }}-${{ hashFiles('client/yarn.lock','client/src-tauri/Cargo.lock') }}-client-caro-node
      - name: Buildcache (gradle)
        uses: pat-s/always-upload-cache@v3.0.1
        with:
          path: |
            **/build/
          key: ${{ runner.os }}-${{ hashFiles('**/build.gradle.kts','settings.gradle.kts') }}-client-gradle
      - name: Install app dependencies
        run: yarn install
      - name: Run WebContent Build
        run: yarn build
      - name: Run Tests
        working-directory: ./client/src-tauri
        run: cargo test
      - name: Run Build
        if: matrix.platform != 'macos-latest'
        run: yarn tauri build --debug
      - name: Run Build (macos)
        if: matrix.platform == 'macos-latest'
        run: yarn tauri build --debug --target universal-apple-darwin
  build-server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.4.1
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@859c33240bd026ce8d5f711f5adcc65c2f8eafc1
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '11'
      - name: Buildcache
        id: cache-primes
        uses: pat-s/always-upload-cache@v3.0.1
        with:
          path: |
            **/build/
          key: ${{ runner.os }}-${{ hashFiles('**/build.gradle.kts','settings.gradle.kts') }}-server
      - name: Run Build
        run: ./gradlew server:build
      - name: Run Test
        run: ./gradlew server:test
      - name: Stop Gradle
        run: ./gradlew --stop
