import{B as a,C as q,D as z,s as S,E as j,F as w}from"./index-3b672fbb.js";const c=[];function g(t,o){return{subscribe:y(t,o).subscribe}}function y(t,o=a){let i;const n=new Set;function l(s){if(S(t,s)&&(t=s,i)){const r=!c.length;for(const e of n)e[1](),c.push(e,t);if(r){for(let e=0;e<c.length;e+=2)c[e][0](c[e+1]);c.length=0}}}function f(s){l(s(t))}function b(s,r=a){const e=[s,r];return n.add(e),n.size===1&&(i=o(l)||a),s(t),()=>{n.delete(e),n.size===0&&(i(),i=null)}}return{set:l,update:f,subscribe:b}}function A(t,o,i){const n=!Array.isArray(t),l=n?[t]:t,f=o.length<2;return g(i,b=>{let s=!1;const r=[];let e=0,p=a;const d=()=>{if(e)return;p();const u=o(n?r[0]:r,b);f?b(u):p=j(u)?u:a},h=l.map((u,_)=>q(u,m=>{r[_]=m,e&=~(1<<_),s&&d()},()=>{e|=1<<_}));return s=!0,d(),function(){z(h),p()}})}const x=Object.freeze(Object.defineProperty({__proto__:null,derived:A,get:w,readable:g,writable:y},Symbol.toStringTag,{value:"Module"}));export{x as s,y as w};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXgtYjU4NWJlZDUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdmVsdGUvc3RvcmUvaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG5vb3AsIHNhZmVfbm90X2VxdWFsLCBzdWJzY3JpYmUsIHJ1bl9hbGwsIGlzX2Z1bmN0aW9uIH0gZnJvbSAnLi4vaW50ZXJuYWwvaW5kZXgubWpzJztcbmV4cG9ydCB7IGdldF9zdG9yZV92YWx1ZSBhcyBnZXQgfSBmcm9tICcuLi9pbnRlcm5hbC9pbmRleC5tanMnO1xuXG5jb25zdCBzdWJzY3JpYmVyX3F1ZXVlID0gW107XG4vKipcbiAqIENyZWF0ZXMgYSBgUmVhZGFibGVgIHN0b3JlIHRoYXQgYWxsb3dzIHJlYWRpbmcgYnkgc3Vic2NyaXB0aW9uLlxuICogQHBhcmFtIHZhbHVlIGluaXRpYWwgdmFsdWVcbiAqIEBwYXJhbSB7U3RhcnRTdG9wTm90aWZpZXJ9c3RhcnQgc3RhcnQgYW5kIHN0b3Agbm90aWZpY2F0aW9ucyBmb3Igc3Vic2NyaXB0aW9uc1xuICovXG5mdW5jdGlvbiByZWFkYWJsZSh2YWx1ZSwgc3RhcnQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBzdWJzY3JpYmU6IHdyaXRhYmxlKHZhbHVlLCBzdGFydCkuc3Vic2NyaWJlXG4gICAgfTtcbn1cbi8qKlxuICogQ3JlYXRlIGEgYFdyaXRhYmxlYCBzdG9yZSB0aGF0IGFsbG93cyBib3RoIHVwZGF0aW5nIGFuZCByZWFkaW5nIGJ5IHN1YnNjcmlwdGlvbi5cbiAqIEBwYXJhbSB7Kj19dmFsdWUgaW5pdGlhbCB2YWx1ZVxuICogQHBhcmFtIHtTdGFydFN0b3BOb3RpZmllcj19c3RhcnQgc3RhcnQgYW5kIHN0b3Agbm90aWZpY2F0aW9ucyBmb3Igc3Vic2NyaXB0aW9uc1xuICovXG5mdW5jdGlvbiB3cml0YWJsZSh2YWx1ZSwgc3RhcnQgPSBub29wKSB7XG4gICAgbGV0IHN0b3A7XG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0KCk7XG4gICAgZnVuY3Rpb24gc2V0KG5ld192YWx1ZSkge1xuICAgICAgICBpZiAoc2FmZV9ub3RfZXF1YWwodmFsdWUsIG5ld192YWx1ZSkpIHtcbiAgICAgICAgICAgIHZhbHVlID0gbmV3X3ZhbHVlO1xuICAgICAgICAgICAgaWYgKHN0b3ApIHsgLy8gc3RvcmUgaXMgcmVhZHlcbiAgICAgICAgICAgICAgICBjb25zdCBydW5fcXVldWUgPSAhc3Vic2NyaWJlcl9xdWV1ZS5sZW5ndGg7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBzdWJzY3JpYmVyIG9mIHN1YnNjcmliZXJzKSB7XG4gICAgICAgICAgICAgICAgICAgIHN1YnNjcmliZXJbMV0oKTtcbiAgICAgICAgICAgICAgICAgICAgc3Vic2NyaWJlcl9xdWV1ZS5wdXNoKHN1YnNjcmliZXIsIHZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHJ1bl9xdWV1ZSkge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN1YnNjcmliZXJfcXVldWUubGVuZ3RoOyBpICs9IDIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1YnNjcmliZXJfcXVldWVbaV1bMF0oc3Vic2NyaWJlcl9xdWV1ZVtpICsgMV0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHN1YnNjcmliZXJfcXVldWUubGVuZ3RoID0gMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gdXBkYXRlKGZuKSB7XG4gICAgICAgIHNldChmbih2YWx1ZSkpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzdWJzY3JpYmUocnVuLCBpbnZhbGlkYXRlID0gbm9vcCkge1xuICAgICAgICBjb25zdCBzdWJzY3JpYmVyID0gW3J1biwgaW52YWxpZGF0ZV07XG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChzdWJzY3JpYmVyKTtcbiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDEpIHtcbiAgICAgICAgICAgIHN0b3AgPSBzdGFydChzZXQpIHx8IG5vb3A7XG4gICAgICAgIH1cbiAgICAgICAgcnVuKHZhbHVlKTtcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShzdWJzY3JpYmVyKTtcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgc3RvcCgpO1xuICAgICAgICAgICAgICAgIHN0b3AgPSBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4geyBzZXQsIHVwZGF0ZSwgc3Vic2NyaWJlIH07XG59XG5mdW5jdGlvbiBkZXJpdmVkKHN0b3JlcywgZm4sIGluaXRpYWxfdmFsdWUpIHtcbiAgICBjb25zdCBzaW5nbGUgPSAhQXJyYXkuaXNBcnJheShzdG9yZXMpO1xuICAgIGNvbnN0IHN0b3Jlc19hcnJheSA9IHNpbmdsZVxuICAgICAgICA/IFtzdG9yZXNdXG4gICAgICAgIDogc3RvcmVzO1xuICAgIGNvbnN0IGF1dG8gPSBmbi5sZW5ndGggPCAyO1xuICAgIHJldHVybiByZWFkYWJsZShpbml0aWFsX3ZhbHVlLCAoc2V0KSA9PiB7XG4gICAgICAgIGxldCBpbml0ZWQgPSBmYWxzZTtcbiAgICAgICAgY29uc3QgdmFsdWVzID0gW107XG4gICAgICAgIGxldCBwZW5kaW5nID0gMDtcbiAgICAgICAgbGV0IGNsZWFudXAgPSBub29wO1xuICAgICAgICBjb25zdCBzeW5jID0gKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHBlbmRpbmcpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjbGVhbnVwKCk7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBmbihzaW5nbGUgPyB2YWx1ZXNbMF0gOiB2YWx1ZXMsIHNldCk7XG4gICAgICAgICAgICBpZiAoYXV0bykge1xuICAgICAgICAgICAgICAgIHNldChyZXN1bHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY2xlYW51cCA9IGlzX2Z1bmN0aW9uKHJlc3VsdCkgPyByZXN1bHQgOiBub29wO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBjb25zdCB1bnN1YnNjcmliZXJzID0gc3RvcmVzX2FycmF5Lm1hcCgoc3RvcmUsIGkpID0+IHN1YnNjcmliZShzdG9yZSwgKHZhbHVlKSA9PiB7XG4gICAgICAgICAgICB2YWx1ZXNbaV0gPSB2YWx1ZTtcbiAgICAgICAgICAgIHBlbmRpbmcgJj0gfigxIDw8IGkpO1xuICAgICAgICAgICAgaWYgKGluaXRlZCkge1xuICAgICAgICAgICAgICAgIHN5bmMoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwgKCkgPT4ge1xuICAgICAgICAgICAgcGVuZGluZyB8PSAoMSA8PCBpKTtcbiAgICAgICAgfSkpO1xuICAgICAgICBpbml0ZWQgPSB0cnVlO1xuICAgICAgICBzeW5jKCk7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiBzdG9wKCkge1xuICAgICAgICAgICAgcnVuX2FsbCh1bnN1YnNjcmliZXJzKTtcbiAgICAgICAgICAgIGNsZWFudXAoKTtcbiAgICAgICAgfTtcbiAgICB9KTtcbn1cblxuZXhwb3J0IHsgZGVyaXZlZCwgcmVhZGFibGUsIHdyaXRhYmxlIH07XG4iXSwibmFtZXMiOlsic3Vic2NyaWJlcl9xdWV1ZSIsInJlYWRhYmxlIiwidmFsdWUiLCJzdGFydCIsIndyaXRhYmxlIiwibm9vcCIsInN0b3AiLCJzdWJzY3JpYmVycyIsInNldCIsIm5ld192YWx1ZSIsInNhZmVfbm90X2VxdWFsIiwicnVuX3F1ZXVlIiwic3Vic2NyaWJlciIsImkiLCJ1cGRhdGUiLCJmbiIsInN1YnNjcmliZSIsInJ1biIsImludmFsaWRhdGUiLCJkZXJpdmVkIiwic3RvcmVzIiwiaW5pdGlhbF92YWx1ZSIsInNpbmdsZSIsInN0b3Jlc19hcnJheSIsImF1dG8iLCJpbml0ZWQiLCJ2YWx1ZXMiLCJwZW5kaW5nIiwiY2xlYW51cCIsInN5bmMiLCJyZXN1bHQiLCJpc19mdW5jdGlvbiIsInVuc3Vic2NyaWJlcnMiLCJzdG9yZSIsInJ1bl9hbGwiXSwibWFwcGluZ3MiOiIyRUFHQSxNQUFNQSxFQUFtQixDQUFBLEVBTXpCLFNBQVNDLEVBQVNDLEVBQU9DLEVBQU8sQ0FDNUIsTUFBTyxDQUNILFVBQVdDLEVBQVNGLEVBQU9DLENBQUssRUFBRSxTQUMxQyxDQUNBLENBTUEsU0FBU0MsRUFBU0YsRUFBT0MsRUFBUUUsRUFBTSxDQUNuQyxJQUFJQyxFQUNKLE1BQU1DLEVBQWMsSUFBSSxJQUN4QixTQUFTQyxFQUFJQyxFQUFXLENBQ3BCLEdBQUlDLEVBQWVSLEVBQU9PLENBQVMsSUFDL0JQLEVBQVFPLEVBQ0pILEdBQU0sQ0FDTixNQUFNSyxFQUFZLENBQUNYLEVBQWlCLE9BQ3BDLFVBQVdZLEtBQWNMLEVBQ3JCSyxFQUFXLENBQUMsSUFDWlosRUFBaUIsS0FBS1ksRUFBWVYsQ0FBSyxFQUUzQyxHQUFJUyxFQUFXLENBQ1gsUUFBU0UsRUFBSSxFQUFHQSxFQUFJYixFQUFpQixPQUFRYSxHQUFLLEVBQzlDYixFQUFpQmEsQ0FBQyxFQUFFLENBQUMsRUFBRWIsRUFBaUJhLEVBQUksQ0FBQyxDQUFDLEVBRWxEYixFQUFpQixPQUFTLENBQzdCLENBQ0osQ0FFUixDQUNELFNBQVNjLEVBQU9DLEVBQUksQ0FDaEJQLEVBQUlPLEVBQUdiLENBQUssQ0FBQyxDQUNoQixDQUNELFNBQVNjLEVBQVVDLEVBQUtDLEVBQWFiLEVBQU0sQ0FDdkMsTUFBTU8sRUFBYSxDQUFDSyxFQUFLQyxDQUFVLEVBQ25DLE9BQUFYLEVBQVksSUFBSUssQ0FBVSxFQUN0QkwsRUFBWSxPQUFTLElBQ3JCRCxFQUFPSCxFQUFNSyxDQUFHLEdBQUtILEdBRXpCWSxFQUFJZixDQUFLLEVBQ0YsSUFBTSxDQUNUSyxFQUFZLE9BQU9LLENBQVUsRUFDekJMLEVBQVksT0FBUyxJQUNyQkQsSUFDQUEsRUFBTyxLQUV2QixDQUNLLENBQ0QsTUFBTyxDQUFFLElBQUFFLEVBQUssT0FBQU0sRUFBUSxVQUFBRSxFQUMxQixDQUNBLFNBQVNHLEVBQVFDLEVBQVFMLEVBQUlNLEVBQWUsQ0FDeEMsTUFBTUMsRUFBUyxDQUFDLE1BQU0sUUFBUUYsQ0FBTSxFQUM5QkcsRUFBZUQsRUFDZixDQUFDRixDQUFNLEVBQ1BBLEVBQ0FJLEVBQU9ULEVBQUcsT0FBUyxFQUN6QixPQUFPZCxFQUFTb0IsRUFBZ0JiLEdBQVEsQ0FDcEMsSUFBSWlCLEVBQVMsR0FDYixNQUFNQyxFQUFTLENBQUEsRUFDZixJQUFJQyxFQUFVLEVBQ1ZDLEVBQVV2QixFQUNkLE1BQU13QixFQUFPLElBQU0sQ0FDZixHQUFJRixFQUNBLE9BRUpDLElBQ0EsTUFBTUUsRUFBU2YsRUFBR08sRUFBU0ksRUFBTyxDQUFDLEVBQUlBLEVBQVFsQixDQUFHLEVBQzlDZ0IsRUFDQWhCLEVBQUlzQixDQUFNLEVBR1ZGLEVBQVVHLEVBQVlELENBQU0sRUFBSUEsRUFBU3pCLENBRXpELEVBQ2MyQixFQUFnQlQsRUFBYSxJQUFJLENBQUNVLEVBQU9wQixJQUFNRyxFQUFVaUIsRUFBUS9CLEdBQVUsQ0FDN0V3QixFQUFPYixDQUFDLEVBQUlYLEVBQ1p5QixHQUFXLEVBQUUsR0FBS2QsR0FDZFksR0FDQUksR0FFaEIsRUFBVyxJQUFNLENBQ0xGLEdBQVksR0FBS2QsQ0FDcEIsQ0FBQSxDQUFDLEVBQ0YsT0FBQVksRUFBUyxHQUNUSSxJQUNPLFVBQWdCLENBQ25CSyxFQUFRRixDQUFhLEVBQ3JCSixHQUNaLENBQ0EsQ0FBSyxDQUNMIn0=
