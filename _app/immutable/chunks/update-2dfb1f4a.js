import{w as o}from"./index-bd5d3c8f.js";import{S as i}from"./sweetalert2.all-59c9fe1c.js";import{s as r}from"./alerts-67056a1a.js";function l(){return"__TAURI__"in window?"tauri":"web"}const s=l();let e;function a(){e.active&&r({text:"Update installed Click here to Restart",type:"info",showCloseButton:!1,onClick:async t=>{t.text.set("Installing Please wait..."),await c()}})}async function c(){await e.update(),e.installing?(console.log("SW still installing waiting for it to finish"),e.installing.addEventListener("statechange",n)):await n()}async function n(){console.log("SW installed apply update to Application"),e.waiting?e.waiting.postMessage("APPLY_UPDATE"):window.location.reload()}async function w(){if(s==="tauri"){console.log("Service Worker skipped! (Tauri)");return}if("serviceWorker"in navigator){navigator.serviceWorker.addEventListener("controllerchange",()=>{console.log("Controllerchange event -> reloading"),i.fire({title:"Restarting",text:"Please Wait"}),i.showLoading(null),window.location.reload()});const t=await navigator.serviceWorker.register("/service-worker.js");t&&(e=t,e.waiting||e.installing?a():e.addEventListener("updatefound",a),setInterval(()=>t.update(),1e3*60*60))}else console.log("Service Worker not supported by browser")}const d=o();window.addEventListener("beforeinstallprompt",t=>{t.preventDefault(),d.set(t)});export{d as a,w as i};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXBkYXRlLTJkZmIxZjRhLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvc2NyaXB0cy9taW5vci9wbGF0Zm9ybS50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9zY3JpcHRzL21pbm9yL3VwZGF0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2Rldn0gZnJvbSAnJGFwcC9lbnZpcm9ubWVudCc7XG5cbmV4cG9ydCB0eXBlIFBsYXRmb3JtID0gXCJ3ZWJcIiB8IFwidGF1cmlcIiAvL1RPRE8gc29tZSBhbmRyb2lkL2lvcyBzdHVmZlxuXG5cbmZ1bmN0aW9uIGdldFBsYXRmb3JtKCk6IFBsYXRmb3JtIHtcbiAgICBpZiAoJ19fVEFVUklfXycgaW4gd2luZG93KSB7XG4gICAgICAgIHJldHVybiBcInRhdXJpXCJcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gXCJ3ZWJcIlxuICAgIH1cbn1cbmV4cG9ydCBjb25zdCBkZWJ1ZyA9IGRldlxuZXhwb3J0IGNvbnN0IHBsYXRmb3JtOiBQbGF0Zm9ybSA9IGdldFBsYXRmb3JtKCk7IiwiaW1wb3J0IHt3cml0YWJsZX0gZnJvbSBcInN2ZWx0ZS9zdG9yZVwiO1xuaW1wb3J0IFN3YWwgZnJvbSAnc3dlZXRhbGVydDInXG5pbXBvcnQge3NlbmRBbGVydH0gZnJvbSBcIi4vYWxlcnRzLmpzXCI7XG5pbXBvcnQge2Rldn0gZnJvbSAnJGFwcC9lbnZpcm9ubWVudCc7XG5pbXBvcnQge3BsYXRmb3JtfSBmcm9tIFwiLi9wbGF0Zm9ybS5qc1wiO1xuXG5cbi8vVE9ETyBvcHRpbWl6ZSB0aGlzXG5cbmxldCByZWdpc3RyYXRpb246IFNlcnZpY2VXb3JrZXJSZWdpc3RyYXRpb247XG5cbmZ1bmN0aW9uIGluZm9ybV91cGRhdGVfYXZhaWxhYmxlKCkge1xuICAgIGlmIChyZWdpc3RyYXRpb24uYWN0aXZlKVxuICAgICAgICBzZW5kQWxlcnQoe1xuICAgICAgICAgICAgdGV4dDogXCJVcGRhdGUgaW5zdGFsbGVkIENsaWNrIGhlcmUgdG8gUmVzdGFydFwiLFxuICAgICAgICAgICAgdHlwZTogXCJpbmZvXCIsXG4gICAgICAgICAgICBzaG93Q2xvc2VCdXR0b246IGZhbHNlLFxuICAgICAgICAgICAgb25DbGljazogYXN5bmMgKGFsZXJ0KSA9PiB7XG4gICAgICAgICAgICAgICAgYWxlcnQudGV4dC5zZXQoJ0luc3RhbGxpbmcgUGxlYXNlIHdhaXQuLi4nKVxuICAgICAgICAgICAgICAgIGF3YWl0IGFwcGx5X3VwZGF0ZSgpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG59XG5cbmFzeW5jIGZ1bmN0aW9uIGFwcGx5X3VwZGF0ZSgpIHtcbiAgICBhd2FpdCByZWdpc3RyYXRpb24udXBkYXRlKClcbiAgICBpZiAocmVnaXN0cmF0aW9uLmluc3RhbGxpbmcpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJTVyBzdGlsbCBpbnN0YWxsaW5nIHdhaXRpbmcgZm9yIGl0IHRvIGZpbmlzaFwiKVxuICAgICAgICByZWdpc3RyYXRpb24uaW5zdGFsbGluZy5hZGRFdmVudExpc3RlbmVyKCdzdGF0ZWNoYW5nZScsIGFwcGx5X3VwZGF0ZV9zdGFnZV8yKVxuICAgIH0gZWxzZVxuICAgICAgICBhd2FpdCBhcHBseV91cGRhdGVfc3RhZ2VfMigpXG59XG5cbmFzeW5jIGZ1bmN0aW9uIGFwcGx5X3VwZGF0ZV9zdGFnZV8yKCkge1xuICAgIGNvbnNvbGUubG9nKFwiU1cgaW5zdGFsbGVkIGFwcGx5IHVwZGF0ZSB0byBBcHBsaWNhdGlvblwiKVxuICAgIGlmIChyZWdpc3RyYXRpb24ud2FpdGluZylcbiAgICAgICAgcmVnaXN0cmF0aW9uLndhaXRpbmcucG9zdE1lc3NhZ2UoJ0FQUExZX1VQREFURScpXG4gICAgZWxzZVxuICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKClcbn1cblxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaW5pdCgpIHtcblxuICAgIGlmIChwbGF0Zm9ybSA9PT0gXCJ0YXVyaVwiKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiU2VydmljZSBXb3JrZXIgc2tpcHBlZCEgKFRhdXJpKVwiKVxuICAgICAgICByZXR1cm5cbiAgICB9IGVsc2UgaWYgKGRldikge1xuICAgICAgICBjb25zb2xlLmxvZyhcIlNlcnZpY2UgV29ya2VyIHNraXBwZWQhIChkZXYgbW9kZSlcIilcbiAgICAgICAgcmV0dXJuXG4gICAgfVxuXG5cbiAgICBpZiAoJ3NlcnZpY2VXb3JrZXInIGluIG5hdmlnYXRvcikge1xuICAgICAgICBuYXZpZ2F0b3Iuc2VydmljZVdvcmtlci5hZGRFdmVudExpc3RlbmVyKCdjb250cm9sbGVyY2hhbmdlJywgKCkgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJDb250cm9sbGVyY2hhbmdlIGV2ZW50IC0+IHJlbG9hZGluZ1wiKVxuICAgICAgICAgICAgU3dhbC5maXJlKHtcbiAgICAgICAgICAgICAgICB0aXRsZTogJ1Jlc3RhcnRpbmcnLFxuICAgICAgICAgICAgICAgIHRleHQ6ICdQbGVhc2UgV2FpdCdcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICBTd2FsLnNob3dMb2FkaW5nKG51bGwpXG4gICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKClcbiAgICAgICAgfSlcbiAgICAgICAgY29uc3QgY19yZWdpc3RyYXRpb24gPSBhd2FpdCBuYXZpZ2F0b3Iuc2VydmljZVdvcmtlci5yZWdpc3RlcihcIi9zZXJ2aWNlLXdvcmtlci5qc1wiKVxuICAgICAgICBpZiAoY19yZWdpc3RyYXRpb24pIHtcbiAgICAgICAgICAgIHJlZ2lzdHJhdGlvbiA9IGNfcmVnaXN0cmF0aW9uO1xuXG4gICAgICAgICAgICBpZiAocmVnaXN0cmF0aW9uLndhaXRpbmcgfHwgcmVnaXN0cmF0aW9uLmluc3RhbGxpbmcpXG4gICAgICAgICAgICAgICAgaW5mb3JtX3VwZGF0ZV9hdmFpbGFibGUoKVxuICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgIHJlZ2lzdHJhdGlvbi5hZGRFdmVudExpc3RlbmVyKCd1cGRhdGVmb3VuZCcsIGluZm9ybV91cGRhdGVfYXZhaWxhYmxlKVxuICAgICAgICAgICAgLy9sb29rIGZvciB1cGRhdGVzIGV2ZXJ5IDYwIG1pbnV0ZXNcbiAgICAgICAgICAgIHNldEludGVydmFsKCgpID0+IGNfcmVnaXN0cmF0aW9uLnVwZGF0ZSgpLCAxMDAwICogNjAgKiA2MClcbiAgICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiU2VydmljZSBXb3JrZXIgbm90IHN1cHBvcnRlZCBieSBicm93c2VyXCIpXG4gICAgfVxufVxuXG5leHBvcnQgY29uc3QgaW5zdGFsbFByb210ID0gd3JpdGFibGU8RXZlbnQgfCBudWxsPigpXG5cbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdiZWZvcmVpbnN0YWxscHJvbXB0JywgKGV2ZW50KSA9PiB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBpbnN0YWxsUHJvbXQuc2V0KGV2ZW50KVxufSkiXSwibmFtZXMiOlsiZ2V0UGxhdGZvcm0iLCJwbGF0Zm9ybSIsInJlZ2lzdHJhdGlvbiIsImluZm9ybV91cGRhdGVfYXZhaWxhYmxlIiwic2VuZEFsZXJ0IiwiYWxlcnQiLCJhcHBseV91cGRhdGUiLCJhcHBseV91cGRhdGVfc3RhZ2VfMiIsImluaXQiLCJTd2FsIiwiY19yZWdpc3RyYXRpb24iLCJpbnN0YWxsUHJvbXQiLCJ3cml0YWJsZSIsImV2ZW50Il0sIm1hcHBpbmdzIjoibUlBS0EsU0FBU0EsR0FBd0IsQ0FDN0IsTUFBSSxjQUFlLE9BQ1IsUUFFQSxLQUVmLENBRU8sTUFBTUMsRUFBcUJELEVBQVksRUNKOUMsSUFBSUUsRUFFSixTQUFTQyxHQUEwQixDQUMzQkQsRUFBYSxRQUNIRSxFQUFBLENBQ04sS0FBTSx5Q0FDTixLQUFNLE9BQ04sZ0JBQWlCLEdBQ2pCLFFBQVMsTUFBT0MsR0FBVSxDQUNoQkEsRUFBQSxLQUFLLElBQUksMkJBQTJCLEVBQzFDLE1BQU1DLEVBQWEsQ0FDdkIsQ0FBQSxDQUNILENBQ1QsQ0FFQSxlQUFlQSxHQUFlLENBQzFCLE1BQU1KLEVBQWEsU0FDZkEsRUFBYSxZQUNiLFFBQVEsSUFBSSw4Q0FBOEMsRUFDN0NBLEVBQUEsV0FBVyxpQkFBaUIsY0FBZUssQ0FBb0IsR0FFNUUsTUFBTUEsRUFBcUIsQ0FDbkMsQ0FFQSxlQUFlQSxHQUF1QixDQUNsQyxRQUFRLElBQUksMENBQTBDLEVBQ2xETCxFQUFhLFFBQ0FBLEVBQUEsUUFBUSxZQUFZLGNBQWMsRUFFL0MsT0FBTyxTQUFTLFFBQ3hCLENBR0EsZUFBc0JNLEdBQU8sQ0FFekIsR0FBSVAsSUFBYSxRQUFTLENBQ3RCLFFBQVEsSUFBSSxpQ0FBaUMsRUFDN0MsTUFJSixDQUdBLEdBQUksa0JBQW1CLFVBQVcsQ0FDcEIsVUFBQSxjQUFjLGlCQUFpQixtQkFBb0IsSUFBTSxDQUMvRCxRQUFRLElBQUkscUNBQXFDLEVBQ2pEUSxFQUFLLEtBQUssQ0FDTixNQUFPLGFBQ1AsS0FBTSxhQUFBLENBQ1QsRUFDREEsRUFBSyxZQUFZLElBQUksRUFDckIsT0FBTyxTQUFTLFFBQU8sQ0FDMUIsRUFDRCxNQUFNQyxFQUFpQixNQUFNLFVBQVUsY0FBYyxTQUFTLG9CQUFvQixFQUM5RUEsSUFDZVIsRUFBQVEsRUFFWFIsRUFBYSxTQUFXQSxFQUFhLFdBQ2JDLElBRVhELEVBQUEsaUJBQWlCLGNBQWVDLENBQXVCLEVBRXhFLFlBQVksSUFBTU8sRUFBZSxPQUFBLEVBQVUsSUFBTyxHQUFLLEVBQUUsRUFDN0QsTUFFQSxRQUFRLElBQUkseUNBQXlDLENBRTdELENBRU8sTUFBTUMsRUFBZUMsRUFBdUIsRUFFbkQsT0FBTyxpQkFBaUIsc0JBQXdCQyxHQUFVLENBQ3REQSxFQUFNLGVBQWUsRUFDckJGLEVBQWEsSUFBSUUsQ0FBSyxDQUMxQixDQUFDIn0=
